artifacts: []
description: ^ Provides support for configuring Java JVM, e.g. GC settings, etc.  Basic
  usage is opts=$($JBOSS_CONTAINER_JAVA_JVM_MODULE/java-default-options)
envs:
- name: JBOSS_CONTAINER_JAVA_JVM_MODULE
  value: /opt/jboss/container/java/jvm
- description: If set, this prevents all default and generated options (such as JVM
    and GC tuning, proxy settings, etc.) from being applied. Instead the user should
    specify exactly the `java` options they want in this variable.
  example: -verbose:class
  name: JAVA_OPTS
- description: User specified Java options to be appended to the generated options.
    This variable has no effect if `JAVA_OPTS` has been defined.
  example: -Dsome.property=foo
  name: JAVA_OPTS_APPEND
- description: Specify the maximum heap memory. Corresponds to the JVM argument `-XX:MaxRAMPercentage`.
    The default is `80.0` which means 80% of the available memory. You can disable
    this mechanism by setting the value to `0`. The supplied value can be an integer
    or float, but only the whole number part is used.
  example: '90.0'
  name: JAVA_MAX_MEM_RATIO
- description: 'Set this to get some diagnostics information to standard output when
    things are happening. **Note: ** This option, if set to true, will set `-XX :+UnlockDiagnosticVMOptions`.
    **Disabled by default.**'
  example: 'true'
  name: JAVA_DIAGNOSTICS
- description: If set remote debugging will be switched on. **Disabled by default.**
  example: 'true'
  name: JAVA_DEBUG
- description: Port used for remote debugging. Defaults to *5005*.
  example: '8787'
  name: JAVA_DEBUG_PORT
- description: Minimum percentage of heap free after GC to avoid expansion.
  example: '20'
  name: GC_MIN_HEAP_FREE_RATIO
- description: Maximum percentage of heap free after GC to avoid shrinking.
  example: '40'
  name: GC_MAX_HEAP_FREE_RATIO
- description: Specifies the ratio of the time spent outside the garbage collection
    (for example, the time spent for application execution) to the time spent in the
    garbage collection.
  example: '4'
  name: GC_TIME_RATIO
- description: The weighting given to the current GC time versus previous GC times.
  example: '90'
  name: GC_ADAPTIVE_SIZE_POLICY_WEIGHT
- description: The initial metaspace size.
  example: '20'
  name: GC_METASPACE_SIZE
- description: The maximum metaspace size.
  example: '100'
  name: GC_MAX_METASPACE_SIZE
- description: specify Java GC to use. The value of this variable should contain the
    necessary JRE command-line options to specify the required GC, which will override
    the default of `-:+UseParallelGC`.
  example: -XX:+UseG1GC
  name: GC_CONTAINER_OPTIONS
execute:
- directory: jboss.container.java.jvm
  module_name: jboss.container.java.jvm
  name: jboss.container.java.jvm/configure.sh
  script: configure.sh
labels: []
modules:
  install:
  - name: jboss.container.user
  - name: jboss.container.java.proxy
  repositories: []
name: jboss.container.java.jvm
osbs:
  configuration: {}
  repository: {}
packages:
  repositories: []
ports: []
schema_version: 1
version: '1.0'
volumes: []
